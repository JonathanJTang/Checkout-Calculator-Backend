name: Fly Deploy
on:
  push:
    branches:
      - main
env:
  FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
jobs:
  test:
    name: Run Django tests
    runs-on: ubuntu-latest
    env:
      SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          cache: 'pip' # cache pip dependencies
      - run: pip install -r requirements.txt && cd server && python manage.py test --noinput
  deploy:
    name: Deploy app to Fly
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: [test, flytest]
    env:
      SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
    steps:
      - uses: actions/checkout@v3
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl agent restart && flyctl deploy --remote-only --build-secret SECRET_KEY=${{ env.SECRET_KEY }}
  flytest:
    name: Test fly connectivity
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl agent restart && flyctl doctor
