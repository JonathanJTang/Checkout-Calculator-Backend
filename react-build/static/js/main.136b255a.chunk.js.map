{"version":3,"sources":["LeftPane.js","RightPane.js","App.js","serviceWorker.js","index.js"],"names":["styles","card","maxWidth","padding","cardItem","margin","priceRegular","color","priceDiscount","fontWeight","CartItem","this","props","parentClickHandler","product","id","discount","classes","Grid","item","Card","className","data-testid","container","direction","justify","style","flexGrow","name","textAlign","quantity","priceStyle","price","Decimal","times","toFixed","IconButton","size","aria-label","onClick","onClickHandler","bind","Component","withStyles","LeftPane","Box","p","spacing","cartList","map","cartItem","key","cartSubtotalCalculator","nameToIconMap","water","burger","OrderButton","productId","marginTop","marginBottom","Button","variant","endIcon","icon","backgroundColor","buttonText","RightPane","overflow","productList","toLowerCase","minWidth","minHeight","parentCheckoutClickHandler","apiBaseUrl","baseUrl","ontarioGSTRate","App","state","fetch","response","json","setState","console","log","find","updatedProduct","available_stock","alert","cartItemIndex","findIndex","cartProduct","Object","assign","concat","splice","nonTaxedSubtotal","taxedSubtotal","taxed_item","add","AppBar","position","Toolbar","onOrderButtonClick","onCheckoutClick","onCartItemRemoveClick","calculateSubtotal","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.136b255a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { withStyles } from '@material-ui/core';\nimport Decimal from 'decimal.js-light';\n\n\nconst styles = {\n  card: {\n    maxWidth: 700,\n    // margin: `${theme.spacing(1)}px auto`,\n    padding: 10,\n  },\n  cardItem: {\n    margin: \"auto\",\n  },\n  priceRegular: {\n    color: \"black\",\n  },\n  priceDiscount: {\n    color: \"green\",\n    fontWeight: \"bold\",\n  },\n};\n\n/* An entry in the shopping cart. */\nclass CartItem extends Component {\n  onClickHandler() {\n    this.props.parentClickHandler(this.props.product.id);\n  }\n\n  /* Return the corresponding style className based on whether this product is discounted. */\n  priceStyle() {\n    if (this.props.product.discount > 0) {\n      return this.props.classes.priceDiscount;\n    } else {\n      return this.props.classes.priceRegular;\n    }\n  }\n\n  render() {\n    return (\n      <Grid item>\n        <Card className={this.props.classes.card} data-testid=\"cartItem\">\n          <Grid container direction=\"row\" justify=\"space-between\">\n            <Grid item className={this.props.classes.cardItem}\n                style={{flexGrow: 4}}>\n              <strong>{this.props.product.name} </strong>\n            </Grid>\n            <Grid item className={this.props.classes.cardItem}\n                style={{flexGrow: 1, textAlign: \"right\"}}>\n              {this.props.product.quantity} x <span className={this.priceStyle()}>${this.props.product.price - this.props.product.discount}</span> = \n            </Grid>\n            <Grid item className={this.props.classes.cardItem}\n                style={{flexGrow: 1, textAlign: \"right\"}}>\n              <span className={this.priceStyle()}>\n                $ {(new Decimal(this.props.product.price - this.props.product.discount).times(this.props.product.quantity)).toFixed(2)}\n              </span>\n            </Grid>\n            <Grid item className={this.props.classes.cardItem}\n                style={{flexGrow: 1, textAlign: \"right\"}}>\n              <IconButton color=\"secondary\" size=\"small\" aria-label=\"remove this item\"\n                  onClick={this.onClickHandler.bind(this)}>\n                <CloseIcon />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Card>\n      </Grid>\n    );\n  }\n}\nCartItem = withStyles(styles)(CartItem);\n\n/* The left-hand side pane of the app. */\nclass LeftPane extends Component {\n  render() {\n    return (\n      <Box id=\"leftPane\">\n        <Box id=\"checkoutItemsList\" p={2}>\n          <Grid container direction=\"column\" spacing={2}>\n            {this.props.cartList.map(cartItem => (\n              <CartItem key={cartItem.id} product={cartItem}\n                parentClickHandler={this.props.parentClickHandler}/>\n            ))}\n          </Grid>\n        </Box>\n        <Box id=\"subtotalBar\">\n          Total after tax: ${this.props.cartSubtotalCalculator()}\n        </Box>\n      </Box>\n    );\n  }\n}\n\nexport default withStyles(styles)(LeftPane);","import React, { Component } from 'react';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport LocalDrinkIcon from '@material-ui/icons/LocalDrink';\nimport FastfoodIcon from '@material-ui/icons/Fastfood';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\n\n\n/* Map of product name (from database) to custom icons */\nconst nameToIconMap = {\n  water: <LocalDrinkIcon />,\n  burger: <FastfoodIcon />\n};\n\n/* A button for ordering items, already wrapped in a grid container item\nwith centering. */\nclass OrderButton extends Component {\n  onClickHandler() {\n    this.props.parentClickHandler(this.props.productId);\n  }\n\n  render() {\n    return (\n      <Grid container style={{marginTop: \"5px\", marginBottom: \"5px\"}}>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          endIcon={this.props.icon}\n          style={{ margin: 'auto', backgroundColor: '#26c6da'}}\n          onClick={this.onClickHandler.bind(this)}\n        >\n        {this.props.buttonText}\n        </Button>\n      </Grid>\n    );\n  }\n}\n\n/* The right-hand side pane of the app. */\nclass RightPane extends Component {\n  render() {\n    return (\n      <Box id=\"rightPane\" p={1}>\n        <Box id=\"orderButtonsGroup\">\n          <Grid container direction=\"column\" justify=\"center\" overflow=\"auto\"\n            style={{ flexGrow: 1}}>\n            {this.props.productList.map((product) => (\n              <OrderButton\n                icon={nameToIconMap[product.name.toLowerCase()] ? nameToIconMap[product.name.toLowerCase()] : <AddShoppingCartIcon />}\n                productId={product.id}\n                buttonText={product.name}\n                parentClickHandler={this.props.parentClickHandler}\n                key={product.id}/>\n            ))}\n          </Grid>\n        </Box>\n        <Box>\n        <Grid container item>\n          <Button variant=\"contained\" size=\"large\" color=\"primary\"\n            style={{ minWidth: '75%', minHeight: \"40px\", margin: 'auto' }}\n            onClick={this.props.parentCheckoutClickHandler}>\n            Checkout\n            </Button>\n        </Grid>\n        </Box>\n      </Box>\n    );\n  }\n}\n\nexport default RightPane;\n","import React, { Component } from 'react';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Decimal from 'decimal.js-light';\n\nimport './App.css';\nimport LeftPane from './LeftPane';\nimport RightPane from './RightPane';\n\n// Use either the local Django server url, or the hosted server link\n// const baseUrl = \"http://127.0.0.1:8000\";\nconst baseUrl = \"https://checkoutcalculator301.herokuapp.com\";\nconst apiBaseUrl = baseUrl + \"/api\";\n\nconst ontarioGSTRate = new Decimal(0.13);\n\n\nclass App extends Component {\n\n  state = {\n    productList: [],\n    cartList: []\n  };\n\n  async componentDidMount() {\n    try {\n      /* Fetch product database from backend */\n      const response = await fetch(apiBaseUrl + \"/product-database\");\n      const productList = await response.json();\n      this.setState({\n        productList: productList\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  async onOrderButtonClick(id) {\n    const product = this.state.productList.find((product) => {return product.id === id});\n    try {\n      // Fetch database entry for this product, to see if there are any updates\n      const response = await fetch(apiBaseUrl + `/product-database/${product.id}`);\n      const updatedProduct = await response.json();\n      // console.log(updatedProduct);\n      if (updatedProduct.available_stock <= 0) {  // If product now out of stock\n        alert(`Sorry, product ${product.name} is out of stock`);\n      } else {\n        const cartItemIndex = this.state.cartList.findIndex((cartItem) => {return cartItem.id === product.id});\n        if (cartItemIndex === -1) {\n          // The cart currently has no items of this product \n          const cartProduct = Object.assign({}, product);\n          delete cartProduct.available_stock;\n          cartProduct.quantity = 1;\n          this.setState({cartList: this.state.cartList.concat(cartProduct)});\n        } else if (this.state.cartList[cartItemIndex].quantity === updatedProduct.available_stock) {\n          // Can't add more of this product to the cart than the available stock\n          alert(`Sorry, there are only ${product.available_stock} ${product.name} in stock`);\n        }\n        else {\n          // The cart currently has one or more items of this product \n          const cartProduct = this.state.cartList[cartItemIndex];\n          cartProduct.quantity += 1;\n          this.setState({cartList: this.state.cartList});\n        }\n        \n      }\n    } catch (e) {\n      alert(\"Sorry, an error occurred. Please try again, making sure the web server is online.\");\n      console.log(e);\n    }\n  }\n\n  onCartItemRemoveClick(id) {\n    const cartItemIndex = this.state.cartList.findIndex((cartItem) => {return cartItem.id === id});\n    this.state.cartList.splice(cartItemIndex, 1);\n    this.setState({cartList: this.state.cartList});\n  }\n\n  onCheckoutClick() {\n    alert(\"You have successfully checked out the items!\\nPress 'OK' to checkout the next customer\")\n    this.setState({cartList: []})  // Clear the cart\n  }\n\n  calculateSubtotal() {\n    // Sum up taxed items and non-taxed items separately, and apply the tax multiplier\n    // at the end to avoid decimal inaccuracies\n    let nonTaxedSubtotal = new Decimal(0);\n    let taxedSubtotal = new Decimal(0);\n    for (const cartItem of this.state.cartList) {\n      if (cartItem.taxed_item) {\n        taxedSubtotal = taxedSubtotal.add(new Decimal(cartItem.price - cartItem.discount).times(cartItem.quantity));\n      } else {\n        nonTaxedSubtotal = nonTaxedSubtotal.add(new Decimal(cartItem.price - cartItem.discount).times(cartItem.quantity));\n      }\n    }\n    return (nonTaxedSubtotal.add(taxedSubtotal.times(ontarioGSTRate.add(1)))).toFixed(2);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Box>\n          <AppBar position=\"fixed\" className=\"appHeader\">\n            <Toolbar>\n              Checkout Calculator\n            </Toolbar>\n          </AppBar>\n          <Box><header className=\"appHeader\"></header></Box>\n          <RightPane\n            productList={this.state.productList}\n            parentClickHandler={this.onOrderButtonClick.bind(this)}\n            parentCheckoutClickHandler={this.onCheckoutClick.bind(this)}\n          >\n          </RightPane>\n          <LeftPane\n            cartList={this.state.cartList}\n            parentClickHandler={this.onCartItemRemoveClick.bind(this)}\n            cartSubtotalCalculator={this.calculateSubtotal.bind(this)}\n          >\n          </LeftPane>\n        </Box>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}